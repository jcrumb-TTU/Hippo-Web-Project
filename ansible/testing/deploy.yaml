- name: Prepare local tar file.
  hosts: locals
  tasks:
    - name: Determine Tarball Path
      ansible.builtin.set_fact:
        tar_path: "{{ local_repo | regex_replace('[\\\/]$','') }}.tar.gz"
    - debug: msg="{{ tar_path  }}"
    - name: Create tarball of repository directory.
      ansible.builtin.raw: tar -caf "{{ tar_path|quote }}" -C "{{ local_repo|quote }}" "."

- name: Copy files from local machine to VM.
  hosts: testing
  tasks:
    - name: Make temporary directory on remote.
      ansible.builtin.tempfile:
        state: directory
      register: temp_dir
    - name: Copy the tarball.
      ansible.builtin.copy:
        src: "{{ hostvars['localhost']['tar_path'] }}"
        dest: "{{ temp_dir | quote }}/Hippo-Web-Project-Deployment.tar.gz"
      register: local_deploy
    - name: Extract the tarball on the remote.
      ansible.builtin.command:
        argv:
          - "tar"
          - "-xf"
          - "{{ local_deploy.dest|quote }}"
          - "--one-top-level"
        register: repo_extract

- name: Install systemd units.
  hosts: testing
  tasks:
    - name: Install Systemd Service for the Hippo Backend
      ansible.builtin.include_role:
        name: unit
      vars:
        title: HippoExBackend
        description: Acts as a middle-man that retrieves information on an authorized user's request.
        exec: /usr/share/Hippo-Backend/Hippo-Exchange
        user_unit: true 
      ansible.builtin.include_role:
        name: unit
      vars:
        title: SwaggerValidatorBadge
        description: Displays whether or not the API Spec file has errors in the swagger ui.
        argv:
          - mvn
          - package
          - jetty:run
        dir: /usr/share/swagger-validator/
        user_unit: true

- name: Prepare files on remote
  hosts: testing
  tasks:
    - name: Build Hippo Backend
      ansible.builtin.command:
        argv:
          - dotnet
          - publish
        chdir: "{{ local_deploy.dest + 'hippo-exchange'|quote  }}"

    - name: Patch swagger-ui repository
      ansible.builtin.command:
        argv:
          - git
          - apply
          - "{{ local_deploy.dest + '/submodules/module-patches/swagger-ui.patch'|quote }}"
        chdir: "{{ local_deploy.dest + 'submodules/swagger-ui'|quote  }}"
      register: patch_ui

    - name: Patch swagger-validator repository
      ansible.builtin.command:
        argv:
          - git
          - apply
          - "{{ local_deploy.dest + '/submodules/module-patches/swagger-validator.patch'|quote }}"
        chdir: "{{ local_deploy.dest + 'submodules/swagger-validator'|quote  }}"
      register: patch_validator


- name: Install Nginx Config
  hosts: testing
  tasks:
    - name: Install main configuration file.
      become: true
      ansible.builtin.command:
        argv:
          - mv
          - "{{ local_deploy.dest + ''|quote }}"
          - "/etc/nginx/default.conf"
  
  
